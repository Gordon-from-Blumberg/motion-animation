apply plugin: "java"

sourceCompatibility = ext.javaVersion
[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

sourceSets.main.java.srcDirs = [ "src/" ]
sourceSets.main.resources.srcDirs = [ "assets" ]
sourceSets.test.java.srcDirs = [ "test/" ]

project.ext.mainClassName = "com.gordonfromblumberg.games.desktop.common.DesktopLauncher"
project.ext.assetsDir = new File("assets")

test {
    useJUnitPlatform()
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.3.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.3.1'
}

task run(dependsOn: classes, type: JavaExec) {
    mainClass = project.mainClassName
    classpath = sourceSets.main.runtimeClasspath
    standardInput = System.in
    workingDir = project.assetsDir
    ignoreExitValue = true
}

task debug(dependsOn: classes, type: JavaExec) {
    mainClass = project.mainClassName
    classpath = sourceSets.main.runtimeClasspath
    standardInput = System.in
    workingDir = project.assetsDir
    ignoreExitValue = true
    debug = true
}

task dist(type: Jar) {
    manifest {
        attributes 'Main-Class': project.mainClassName
    }
    from {
        configurations.compileClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
    with jar
}

task copyConfig(type: Copy) {
    from 'config'
    into 'assets/config'
}


dist.dependsOn classes
dist.dependsOn copyConfig
processResources.dependsOn copyConfig
processResources.duplicatesStrategy DuplicatesStrategy.INCLUDE
